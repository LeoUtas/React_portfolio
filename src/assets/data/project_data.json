[
  {
    "id": 1,
    "featured_image": "/assets/project_featured_images/BirdClassification.png",
    "project_title": "Bird classification",
    "project_summary": "When I volunteered at a conservation center in Australia, I loved going on hikes and watching birds. I often found myself curious about the names of the different birds I encountered. I wished I have a Spell Book that can tell me the name of a bird if I showed it a photo. It led to the creation of the Bird Classification app. This is an IOS app that can classify 524 different species of birds. All you have to do is select a photo of the bird, and the app will use its image classification model to identify the bird species. Additionally, if you're logged in, you can learn a fun fact about the bird and save it to your collection for later. Check out links below for more details.",
    "note": "Available on the AppStore for IOS devices ðŸŽ‰",
    "github": "https://github.com/LeoUtas/bird_classification_react-native.git",
    "demo": "https://apps.apple.com/us/app/bird-classification/id6479931668",
    "youtube": "https://youtu.be/wF7Je4-l1L4",
    "figma": "https://www.figma.com/design/t5Jt96p4rlIDbjxL7HsveU/UI-design?node-id=0%3A1&t=RZUeb5FJxSXb1q6l-1",
    "featured_work": "",
    "category": ["Highlights", "Mobile Development"],
    "technical_tools": [
      "React Native, Flask, YOLOv8, TensorFlow Firebase, OpenAI"
    ]
  },

  {
    "id": 2,
    "featured_image": "/assets/project_featured_images/BirdClassificationModelDevelopment.png",
    "project_title": "Bird classification model development",
    "project_summary": "This repository offers source code for the research part of the Bird Classification project where I use various model architectures, including: 1) InceptionV3; 2) MobileNetV1 and V2; and 3) YOLOv8 to address the task. The model evaluation shows that YOLOv8 and MobileNetV1 are the two most suitable solutions for this project. Check out links below for more details.",
    "github": "https://github.com/LeoUtas/bird_classification_research.git",
    "demo": "",
    "youtube": "",
    "figma": "",
    "featured_work": "",
    "category": ["Computer Vision Modeling"],
    "technical_tools": [
      "YOLOv8, TensorFlow, NumPy, Pandas, AWS EC2, AWS S3, WSL"
    ]
  },

  {
    "id": 3,
    "featured_image": "/assets/project_featured_images/hangman2.gif",
    "project_title": "Hangman with GUI",
    "project_summary": "The classic game of Hangman was developed with a graphical user interface (GUI) using Pygame, and character names from Harry Potter were used as word data, which were retrieved using BeautifulSoup. Idea for GUI is from TechwithTim. Check out links below for more details.",
    "github": "https://github.com/LeoUtas/hangman2.git",
    "demo": "",
    "youtube": "",
    "figma": "",
    "featured_work": "",
    "category": ["Tiny Projects"],
    "technical_tools": ["Pygame, BeautifulSoup, NumPy, Pandas"]
  },

  {
    "id": 4,
    "featured_image": "/assets/project_featured_images/Mitochondria_segmentation_research_detectron2.png",
    "project_title": "Mitochondria instance segmentation",
    "project_summary": "I applied 2 different tools (i.e., Detectron and YOLOv8 ) for this task. The results indicated that Detectron2 demonstrated superior performance over YOLOv8. However, in some cases, YOLOv8 performed better on the task of object detection. Check out links below for more details.",
    "github": "https://github.com/LeoUtas/Mitochondria_segmentation_research_detectron2.git",
    "demo": "",
    "youtube": "",
    "figma": "",
    "featured_work": "",
    "category": ["Computer Vision Modeling"],
    "technical_tools": [
      "Detectron2, YOLOv8, OpenCV, NumPy, Pandas, Scikit-image, Leafmap, Matplotlib, Seaborn, AWS EC2, AWS S3, WSL"
    ]
  },

  {
    "id": 5,
    "featured_image": "/assets/project_featured_images/todo_today.gif",
    "project_title": "To do today",
    "note": "Available to use for free ðŸŽ‰",
    "project_summary": "This original project helps to keep track of daily to-do list. It leverages Openai API to generate inspiring messages throughout the day. Users can add new tasks, check completed tasks, remove tasks and start a new day when the day is over. An important feature is tracking the percentage of completed tasks each day throughout history.",
    "github": "https://github.com/LeoUtas/todo_today.git",
    "demo": "https://todotoday0.netlify.app/",
    "youtube": "https://youtu.be/prp0BP-fiAg",
    "figma": "",
    "featured_work": "",
    "category": ["Web Development"],
    "technical_tools": ["ReactJS, HTML, CSS, FastAPI, Supabase, OPenAI"]
  },

  {
    "id": 6,
    "featured_image": "/assets/project_featured_images/thehappycave1.png",
    "project_title": "The Happy Cave",
    "note": "Available on the AppStore for IOS devices ðŸŽ‰",
    "project_summary": "This IOS app is made for my family to use. Currently, it provides 2 main features: 1) English Tutor: The AI engine behind the backend was designed to act as an English tutor focusing on IELTS speaking practices; 2) Talkative Agent: The AI bot was created to generate hilarious jokes - just for making fun conversations. Users can select responses (i.e., text messages and associated audio files) and save them to firebase cloud and retrieve them whenever needed. There will be more features added to this app in the future when I have time and more ideas :).",
    "github": "https://github.com/LeoUtas/thehappycave_mobile_frontend.git",
    "demo": "https://apps.apple.com/ca/app/the-happy-cave/id6478222264",
    "youtube": "https://youtu.be/Y292vfNmIXA",
    "figma": "",
    "featured_work": "",
    "category": ["Mobile Development", "Highlights"],
    "technical_tools": ["React Native, FastAPI, Firebase, OPenAI, ElevenLabs"]
  },

  {
    "id": 7,
    "featured_image": "/assets/project_featured_images/thebookshelf.jpg",
    "project_title": "The Book Shelf",
    "note": "Available to use for free ðŸŽ‰",
    "project_summary": "'The Book Shelf' is a retrieval-augmented generation (RAG) application designed to store books or documents in a vector database on MongoDB. Users can easily retrieve information from the stored documents using similarity search (i.e., search queries close to the target information). The retrieved knowledge then serves as input for a large language model (LLM) to generate the desired responses. This approach enriches the LLM with new information beyond its fixed training data, enabling it to respond based on the specific context provided.",
    "github": "https://github.com/LeoUtas/thebookshelf_frontend.git",
    "demo": "https://thebookshelf-frontend.onrender.com/",
    "youtube": "https://youtu.be/Sm0ZjpWY3ZA",
    "figma": "https://www.figma.com/design/cGaUaR7DrpX11vhSmyuKvj/Frontend?node-id=0-1&t=8uSqEwqm9YQRwpHs-1",
    "featured_work": "",
    "category": ["Web Development", "Highlights"],
    "technical_tools": [
      "React JS and Express JS (Typescript), Langchain JS, Auth0, MongoDB, OPenAI"
    ]
  },

  {
    "id": 8,
    "featured_image": "/assets/project_featured_images/medisync.gif",
    "project_title": "MediSync AI",
    "project_summary": "Building this project, my team won the DO.IT hackathon best-overall prize. Medical professionals with no technical background have difficulty interacting with large medical datasets. We enable medical professionals with no technical background to easily interact with large medical datasets and help them analyze and visualize patient historical records through natural language processing and vector databases. We allow them to query and interact with their database via chatting with a MediSync agent. They can also update medical records or summarize a patient's general health. We also added visualization of general health vitals metrics collected by interacting with MediSync.",
    "github": "",
    "demo": "",
    "youtube": "https://www.youtube.com/watch?v=0E2VGkUw9dQ",
    "figma": "",
    "featured_work": "",
    "category": ["Web Development", "Highlights"],
    "technical_tools": [
      "React JS, Express JS (Typescript), Langchain JS, MongoDB, OPenAI"
    ]
  },

  {
    "id": 9,
    "featured_image": "/assets/project_featured_images/",
    "project_title": "",
    "project_summary": "",
    "github": "",
    "demo": "",
    "youtube": "",
    "figma": "",
    "featured_work": "",
    "category": [],
    "technical_tools": [""]
  }
]
